/******************************************************************************

https://www.tinkercad.com/things/8uklFeq9tg8?sharecode=T_6bDL1zA9kAIDF9nZTjDUGoCqKIJFj9B4mYTVGMPvE
*******************************************************************************/









/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, Java, PHP, Ruby, Perl,
C#, OCaml, VB, Swift, Pascal, Fortran, Haskell, Objective-C, Assembly, HTML, CSS, JS, SQLite, Prolog.
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/

														   /*-----------------------------------------------------*/// OK

#include <Keypad.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd = LiquidCrystal (8, 13, A0, A1, A2, A3);	// OK --------------------------

#define  ROWS  4		//Cuatro Filas --------------------------
#define  COLS  4		//Cuatro Columnas  --------------------------
char keys[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = { 7, 6, 5, 4 };	//Puntos de conexion del teclado al arduino FILAS --------------------------
byte colPins[COLS] = { 3, 2, 1, 0 };	//Puntos de conexion del teclado al arduino COLUMNAS--------------------------

Keypad Teclado1 = Keypad (makeKeymap (keys), rowPins, colPins, ROWS, COLS);	//Configura el teclado--------------------------

/*-----------------------------------------------------*/// OK
// botones
#define CONFIGURACION A4
#define RESET 12
#define TESTPSW 11		// enter
/*-----------------------------------------------------*/// OK
// leds
#define LEDROJO 10		// OK
#define LEDVERDE 9		// OK

/*-----------------------------------------------------*/

char pulsacion[7];
char password[7] = {"2C2022"};
char newPassword[7];

int botonConfigurarAhora;
int botonConfigurarAntes = 0;
int botonEnterAhora;	
int botonEnterAntes = 0;
int botonReset;	 


int tecla = 0;	
int contador = 0;	
int configurar = 0;	

//int segundosAntes = 0;		//

unsigned long segundosAntes = 0;
//unsigned long segundos = 0;


void
setup ()
{
  lcd.begin (16, 2);		// OK --------------------------
  
  pinMode (LEDVERDE, OUTPUT);	// OK 9 --------------------------
  pinMode (LEDROJO, OUTPUT);	// OK 10 --------------------------

  pinMode (CONFIGURACION,INPUT_PULLUP);	// OK A4--------------------------

  pinMode (RESET, INPUT);	//pinMode(reset, INPUT); // 12 --------------------------
  pinMode (TESTPSW, INPUT);	//pinMode(enter, INPUT); // 11 -------------------------- 


};

int botonResetAntes = 0;

void loop ()
{
  
  char boton = Teclado1.getKey (); // key
  unsigned long  segundos = millis();//1000;
 
  
  // fx resetear///////////////////////////////////////////////////////////
  botonReset = digitalRead (RESET);
  
    if (botonReset == 1)
    {
      resetear();
    }


/*
    if (botonReset!= botonResetAntes)
    {
        if (botonReset == HIGH)
        {
              resetear();
        }
        
        botonResetAntes = botonReset;
    }
*/
    if (segundos - segundosAntes >= 1000) // cada vez que pasa un segundo 
    { 
        segundosAntes = segundos;
        contador ++; // incremento el contador cada segundo 
    }
 // fx Enter///////////////////////////////////////////////////////////
 
 
    botonEnterAhora = digitalRead (TESTPSW);	//botonEnter 11
    if(botonEnterAhora != botonEnterAntes) // // si se presiona
    {
        if (botonEnterAhora == HIGH){
            compararPass(contador);// llamo a mi funcion de validacion
        }
        botonEnterAntes = botonEnterAhora;
    }

  // fx configurar///////////////////////////////////////////////////////////  
  
   botonConfigurarAhora = analogRead (CONFIGURACION); // A4
    if (botonConfigurarAhora != botonConfigurarAntes)
    {
        if (botonConfigurarAhora == HIGH) 
        {
           configurar = 1; // llamar a fx configurar
           tecla = 0;  
        }
        botonConfigurarAntes = botonConfigurarAhora;
    }

 // fx  intro_0///////////////////////////////////////////////////////////  

    lcd.setCursor(0,0);
    
    if (configurar == 1) // //funmcion configurar
    {   
        lcd.print("CONFIGURACION: ");
        if(boton != NO_KEY )
        {
            if(tecla <6)
            {
                newPassword[tecla] = boton;
                tecla++;
                lcd.print(newPassword);
            }
            else{
           
                strcpy(pulsacion,"      ");// vaciamos el pass
                strcpy(password,newPassword);
                configurar = 0;
                tecla = 0;
                resetear();// 
            }
            
        }
    }
    else if (configurar == 0) 
    { 
        
        lcd.print("PASSWORD: ");
        
        if (boton != NO_KEY) // && tecla <6)
        {
            if(tecla <6){
                
               pulsacion[tecla] = boton;
               tecla++;
               lcd.print(pulsacion);  
            }
           
        }
        
    }
    
    delay(30);
} // fin del loop


                //////////////////////////////////////////////////////////////////////
                                //***** //FUNCIONES // *****// 
                //////////////////////////////////////////////////////////////////////

void compararPass (int contador)			// compara si el pass ingresado y enciende los leds
{
  int resetea = 0;
  
  if (strcmp(pulsacion,password)!= 0)
  {
      lcd.setCursor(0,2);
      lcd.print("PASSWORD:FAIL.");
      contador = 0;	
      digitalWrite(LEDVERDE,LOW);
      if (contador <= 5){
          
        
              digitalWrite(LEDROJO,HIGH);
              contador++;
          
      }
      else if (contador >= 6)
      {
        resetea = 1;
      } 
  } 
  else if (strcmp(pulsacion,password) == 0 && tecla == 6 )
  { 
      lcd.setCursor(0,2);
      lcd.print("PASSWORD:OK.");
      
      contador = 0; // iniciamos el contador para que parpadee el led
      digitalWrite(LEDROJO,LOW);
      if (contador <= 5){
          
       
              digitalWrite(LEDVERDE,HIGH);
              contador++;
          
          
      }
      else if (contador >= 6) // una vez que pasan los egundos se reinicia
      {
        resetea = 1;
      }
  }
 
 /* if (resetea == 1){
        resetear ();  
    }*/
} 

void resetear ()			// chequear si se resetea el circuito
{
  lcd.setCursor (0, 0);
  lcd.write ("PASSWORD:       ");
  strcpy (pulsacion,"      ");
  tecla = 0;
  lcd.setCursor (0, 2);
  lcd.write ("                ");
  digitalWrite(LEDROJO,LOW);
  digitalWrite(LEDVERDE,LOW);
};



